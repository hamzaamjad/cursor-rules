name: Benchmark Rules

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-benchmark psutil memory_profiler

    - name: Run benchmarks
      run: |
        python scripts/benchmark_rules.py --output baseline_metrics.json

    - name: Compare with baseline
      if: github.event_name == 'pull_request'
      run: |
        # Download previous baseline from main branch
        git fetch origin main
        git checkout origin/main -- baseline_metrics.json || echo '{}' > baseline_metrics.json
        
        # Compare metrics
        python scripts/compare_benchmarks.py baseline_metrics.json current_metrics.json > comparison.md

    - name: Post benchmark results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const comparison = fs.readFileSync('comparison.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comparison
          });

    - name: Upload metrics
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-metrics
        path: |
          baseline_metrics.json
          comparison.md
        retention-days: 90

    - name: Store baseline
      if: github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add baseline_metrics.json
        git diff --quiet && git diff --staged --quiet || git commit -m "chore: update baseline metrics [skip ci]"
        git push
