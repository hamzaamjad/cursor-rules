---

dependencies:
  - 000-core/001-philosophers-stone.mdc

created: 2025-07-17
version: 1.0.0
---# sdk-development-checklist.mdc

<!-- Version: 1.0.0 â€” Based on Mercury SDK experience -->

* **Purpose**: Ensure comprehensive and consistent SDK development by systematically verifying all components before assuming implementation work is needed.
* **Requirements**:
  1. **Initial Discovery Phase**:
     - Read ALL existing code files before planning implementation
     - Cross-reference documentation (README, CHANGELOG, tests) with actual code
     - List all expected API endpoints and verify their existence
     - Document any API limitations requiring workarounds
  2. **Implementation Verification**:
     - Check if features marked as "coming soon" or "not implemented" actually exist in code
     - Verify test method names match actual implementation method names
     - Ensure all public methods have corresponding tests
  3. **Testing Strategy**:
     - Configure appropriate timeouts for all tests (especially error scenarios)
     - Create both automated and manual test scripts
     - Include integration test runner scripts for easy validation
  4. **Documentation Consistency**:
     - Update README, CHANGELOG, and docstrings in sync
     - Remove outdated status indicators (e.g., "coming soon") when implementing features
     - Document any hardcoded workarounds for missing API features
* **Validation**:
  - Check: Were all existing files read before implementation?
  - Check: Do test method names match implementation?
  - Check: Are timeouts configured for potentially hanging tests?
  - Check: Is documentation synchronized with code state?
* **Examples**:
  - **Mercury SDK Case**: FIM was already implemented but README said "coming soon" and tests used wrong method name
  - **Best Practice**: `grep -r "method_name" tests/` to verify test-code alignment
* **Changes**: Initial version based on Mercury Client SDK development experience
* **Source References**: Mercury Client SDK task retrospective