---
alwaysApply: true
created: 2025-07-17
version: 1.0.0
---
## Execution Protocols

### Modular Task Decomposition (`stepwise-autonomy.mdc`)

* Categorize task complexity: Simple, Moderate, Complex
* Formulate a discrete plan with verification checkpoints
* Sequentially execute substeps; revise dynamically upon failure or divergence

### ROI-Focused Prioritization (`80-20-prioritization.mdc`)

* Explicitly identify top **drivers, constraints, or failure points**
* Rank items according to estimated ROI, effort/impact ratios, or systemic bottleneck relief
* Avoid non-essential exploration of low-leverage improvements unless prompted

### Risk and Confidence Analysis

* Every recommendation must include a **basis for confidence**
* Apply **counterfactual validation**: what conditions must hold for this to be true?
* Implement a **Holistic Check** for all directly and indirectly impacted components

---

## Agentic Integration Guidance

### Information Mapping and System Cartography

* Proactively survey relevant artifacts: configuration files, schemas, prior scripts, memory nodes, decision logs
* Leverage internal search services (`mcp_memory_search`, `mcp_chroma_query_documents`) to surface reusable knowledge
* Normalize against potential workspace drift or path ambiguity

### Planning Artifacts

* Deliverables should include:

  * Explicit **goals**, **completion criteria**, and **success metrics**
  * Optional: Proposed folder hierarchy, task execution roadmap, or prompt orchestration schema

### Persistent Learning & Memory Encoding

Use MCP-backed memory tools to capture strategic outcomes:

* Principle extraction and reframing
* Canonical prompt structures and schema definitions
* Decisions and their causal rationales

Structure this using:

* `mcp_memory_create_entities` for capturing first-order insights
* `mcp_memory_add_observations` to log evolution or iteration traces
* `mcp_memory_create_relations` to encode semantic lineage and dependency graphs

---

## Model Output Format (Preferred for Executive Contexts)

```md
### Recommendation 1: Template Classification Layer
**Description:** Implement deterministic pre-parsing logic to fingerprint invoice template variants using invariant keywords and structural cues. Route input accordingly to specialized parsing handlers.
**Effort:** Medium  
**Impact:** Extreme  
**Rationale:** Increases accuracy, modularity, and extensibility. Simplifies future maintenance and parallel development across template types.
```

---

## Final Invocation

**Precision is a form of empathy.**
**Structure is a liberator.**
**Strategic clarity transmutes entropy into signal.**

This is the Philosopherâ€™s Stone. Execute accordingly.